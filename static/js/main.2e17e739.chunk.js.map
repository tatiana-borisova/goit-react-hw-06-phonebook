{"version":3,"sources":["components/Filter/Filter.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reduser.js","redux/store.js","components/Section/Section.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactList/ContactList.js","App.js","index.js","components/Form/Form.module.css","components/Contact/Contact.module.css"],"names":["module","exports","actions","onSubmitHandler","createAction","deleteContact","onChangeFilter","items","createReducer","state","payload","checkingExistingContacts","filter","id","_","value","isNameHere","find","contact","name","toLowerCase","isNumberHere","number","alert","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReduser","devTools","process","allStore","persistor","persistStore","Section","title","children","className","styles","section","defaultProps","connect","dispatch","onSubmit","data","useState","setName","setNumber","handleChange","e","currentTarget","s","form","preventDefault","shortid","generate","label","input","type","pattern","required","placeholder","onChange","button","dispath","onClick","href","getVisibleContacts","allItems","normalizedFilter","item","includes","map","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2e17e739.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst onSubmitHandler = createAction('contacts/submit');\n\nconst deleteContact = createAction('contacts/delete');\n\nconst onChangeFilter = createAction('contacts/changeFilter');\n\nconst actions = { onSubmitHandler, deleteContact, onChangeFilter };\n\nexport default actions;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst items = createReducer([], {\n  [actions.onSubmitHandler]: (state, { payload }) =>\n    checkingExistingContacts(state, payload),\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.onChangeFilter]: (_, { payload }) => payload,\n});\n\nconst checkingExistingContacts = (state, value) => {\n  const isNameHere = state.find(\n    contact => contact.name.toLowerCase() === value.name.toLowerCase(),\n  );\n\n  const isNumberHere = state.find(\n    contact => contact.number.toLowerCase() === value.number.toLowerCase(),\n  );\n\n  return isNameHere || isNumberHere\n    ? alert(\n        `${isNameHere ? value.name : ''} ${\n          isNumberHere ? value.number : ''\n        } is already in contacts`,\n      )\n    : [...state, value];\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReduser from './contacts/contacts-reduser';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReduser),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst allStore = { store, persistor };\n\nexport default allStore;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './Form.module.css';\nimport PropTypes from 'prop-types';\n\nconst Form = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' && setName(value);\n    name === 'number' && setNumber(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ id: shortid.generate(), name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(actions.onSubmitHandler(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <p className={s.filter}>\n    <label className={s.label}>\n      Find contacts\n      <input\n        className={s.input}\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        placeholder=\"Enter name or number\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  </p>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.onChangeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './Contact.module.css';\n\nconst Contact = ({ data, onClick }) => {\n  const { name, number, id } = data;\n\n  return (\n    <div className={s.contact}>\n      <span className={s.name}>{name}:</span>\n      <a className={s.number} href={`tel:${number}`}>\n        {number}\n      </a>\n      <button className={s.button} type=\"button\" onClick={() => onClick(id)}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispath => ({\n  onClick: id => dispath(actions.deleteContact(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(Contact);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Contact from '../Contact';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts }) => (\n  <div className={s.contacts}>\n    <ul>\n      {contacts.map(contact => (\n        <li key={contact.id} className={s.contact}>\n          <Contact data={contact} />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nconst getVisibleContacts = (allItems, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allItems.filter(\n    item =>\n      item.name.toLowerCase().includes(normalizedFilter) ||\n      item.number.includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import Section from './components/Section';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nconst App = () => (\n  <>\n    <Section title=\"Phonebook\">\n      <Form />\n    </Section>\n    <Section title=\"Contacts\">\n      <Filter />\n      <ContactList />\n    </Section>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport allStore from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={allStore.store}>\n      <PersistGate loading={null} persistor={allStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__1m2re\",\"name\":\"Contact_name__2ZcKm\",\"number\":\"Contact_number__2MvnN\",\"button\":\"Contact_button__1wUL0\"};"],"sourceRoot":""}